import socket
import hashlib
import hmac
from cryptography.fernet import Fernet

key = Fernet.generate_key()
keyf = open("key.bin",'w')
keyf.write(str(key))
keyf.close()

#key = b'p7GvOQ_uEvKUPfeWPCeXG7LQyP0LpqMp09qbW7xCxps='
f = Fernet(key)

s = socket.socket()

# reserve a port on your computer
port = 8080

s.bind((socket.gethostbyname(socket.gethostname()), port))
print ("socket binded to %s" %(port))

# put the socket into listening mode
s.listen(5)    
print ("socket is listening")

# Establish connection with client.
c, addr = s.accept()
print ('Got connection from', addr)

# send a thank you message to the client. encoding to send byte type.
c.send(f.encrypt("Thank you for connecting".encode()))

while True:
    # Sending messages
    mssg = input("Server:")
    hsh = hmac.new(b'secret-key', mssg.encode(), hashlib.sha512).digest()
    if mssg == "kickout":
        c.send(f.encrypt(mssg.encode()))
        print("User", addr[0], "has been kicked out and the connection was terminated from port", addr[1])
        c.close()
        break
    c.send(hsh)
    c.send(f.encrypt(mssg.encode()))
    # Reciving messages
    rhsh = c.recv(1024)
    try:
        rmssg = f.decrypt(c.recv(1024).decode())
    except:
        s.close()
        print("Connection Terminated")
        break
    if hmac.new(b'secret-key', rmssg, hashlib.sha512).digest() == rhsh:
        if rmssg.decode('utf-8') == "close":
            print("Connection closed")
            break
        else:
            print("Client:",rmssg.decode('utf-8'))

#s.close()
